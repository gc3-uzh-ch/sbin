#! /bin/sh
#
PROG="$(basename $0)"

## usage and version text

usage () {
cat <<EOF
Usage: $PROG [options] [-w TARGET] COMMAND [ARG ...]

Execute COMMAND on all the ILOM SPs of the hosts specified in the
TARGET expression.  Output results in a format compatible with 'pdsh'.

Options:

  --user, -l NAME       Connect as user NAME.
  --timeout, -t NUM     Time out connections after NUM seconds.
  --targets, -w TARGET  Connect to hosts specified in the TARGET expression.
  --ssh-option, -o ARG  Pass ARG as an additional option to 'ssh'.
  --verbose, -v         Report on connection attempts.

The TARGET expression should follow the same rules as for the 'pdsh'
hostlist expressions -- see man page pdsh(1). If no '-w' option is
given, then the target hosts list is the same selected by 'pdsh' option '-a'.

EOF
}


## helper functions
die () {
  rc="$1"
  shift
  (echo -n "$PROG: ERROR: ";
      if [ $# -gt 0 ]; then echo "$@"; else cat; fi) 1>&2
  exit $rc
}

warn () {
  (echo -n "$PROG: WARNING: ";
      if [ $# -gt 0 ]; then echo "$@"; else cat; fi) 1>&2
}

have_command () {
  type "$1" >/dev/null 2>/dev/null
}

require_command () {
  if ! have_command "$1"; then
    die 1 "Could not find required command '$1' in system PATH. Aborting."
  fi
}

is_absolute_path () {
    expr match "$1" '/' >/dev/null 2>/dev/null
}


## parse command-line


short_opts='l:o:t:vw:x'
long_opts='debug,help,target:,ssh-option:,timeout:,user:,verbose'

if [ "x$(getopt -T)" != 'x--' ]; then
    # GNU getopt
    args=$(getopt --name "$PROG" --shell sh -l "$long_opts" -o "$short_opts" -- "$@")
    if [ $? -ne 0 ]; then
        die 1 "Type '$PROG --help' to get usage information."
    fi
    # use 'eval' to remove getopt quoting
    eval set -- $args
else
    # old-style getopt, use compatibility syntax
    args=$(getopt "$short_opts" "$@")
    if [ $? -ne 0 ]; then
        die 1 "Type '$PROG --help' to get usage information."
    fi
    set -- $args
fi

while [ $# -gt 0 ]; do
    case "$1" in
        --debug|-x)      set -x ;;
        --help|-h)       usage; exit 0 ;;
        --ssh-option|-o) opt_o="$opt_o -o $2" ;;
        --target|-w)     target="-w $2"; shift ;;
        --timeout|-t)    opt_t="-o ConnectTimeout=$2"; shift ;;
        --user|-l)       opt_l="-l $2"; shift ;;
        --verbose|-v)    verbose='-v' ;;
        --)              shift; break ;;
    esac
    shift
done


## main

require_command pdsh
require_command ssh

# TARGET defaults to '-a'
if [ -z "$target" ]; then
    target='-a'
fi

# gather host names
hosts=$(exec pdsh -R exec -N $target echo '%h')

# now run the actual command on ILOM SPs
for host in $hosts; do
    # FIXME: IDESL-specific
    sp=$(idesl-get-ilom-address "$host")
    if [ -n "$verbose" ]; then
        echo 1>&2 "Connecting to host '$sp' with 'ssh -T $opt_o $opt_l $opt_t $sp' ..."
    fi
    (echo "$@"; echo "exit") \
        | ssh -T $opt_o $opt_l $opt_t $sp \
        | (while read line; do echo -n "${host}:"; echo "$line"; done)
done
