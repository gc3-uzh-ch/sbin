#! /bin/sh
#
PROG="$(basename $0)"

## defaults

format='short'


## usage and version

usage () {
cat <<EOF
Usage: $PROG [options] NODE [...]

Convert the node short name (nXXX) to the long form of the host name (rXXcYYbZZnWW).
This translation is specific to the UZH Schroedinger cluster.

Any number of NODEs can be given on the command-line: the long host
names will be outputted one per line.

Example:

  idesl-nodename-to-hostname n237

Options:

  --fqdn, -l  Print the fully-qualified host name.

  --short, -s Print the host name without domain name.
              This is the default.

  --help, -h  Print this help text.

EOF
}


## helper functions
die () {
  rc="$1"
  shift
  (echo -n "$PROG: ERROR: ";
      if [ $# -gt 0 ]; then echo "$@"; else cat; fi) 1>&2
  exit $rc
}

warn () {
  (echo -n "$PROG: WARNING: ";
      if [ $# -gt 0 ]; then echo "$@"; else cat; fi) 1>&2
}

have_command () {
  type "$1" >/dev/null 2>/dev/null
}

require_command () {
  if ! have_command "$1"; then
    die 1 "Could not find required command '$1' in system PATH. Aborting."
  fi
}

is_absolute_path () {
    expr match "$1" '/' >/dev/null 2>/dev/null
}


## parse command-line

short_opts='hls'
long_opts='fqdn,long,short,help'

if [ "x$(getopt -T)" != 'x--' ]; then
    # GNU getopt
    args=$(getopt --name "$PROG" --shell sh -l "$long_opts" -o "$short_opts" -- "$@")
    if [ $? -ne 0 ]; then
        die 1 "Type '$PROG --help' to get usage information."
    fi
    # use 'eval' to remove getopt quoting
    eval set -- $args
else
    # old-style getopt, use compatibility syntax
    args=$(getopt "$short_opts" "$@")
    if [ $? -ne 0 ]; then
        die 1 "Type '$PROG --help' to get usage information."
    fi
    set -- $args
fi

while [ $# -gt 0 ]; do
    case "$1" in
        --fqdn|--long|-l) format='long' ;;
        --short|-s)       format='short'  ;;
        --help|-h) usage; exit 0 ;;
        --) shift; break ;;
    esac
    shift
done

## main

require_command getent

if [ "$format" = 'short' ]; then
    filter='cut -d. -f1'
else
    filter='cat'
fi

for nodename in "$@"; do
    getent hosts "$nodename" | awk '{print $2;}' | $filter
done
